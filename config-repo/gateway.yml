server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

spring:
  application:
    name: gateway
  cloud:
    gateway:
      server:
        webflux:
          routes:
            # Rota já existente (exemplo)
            - id: tasks
              uri: lb://tasks-service
              predicates:
                - Path=/api/tasks/**
              filters:
                - StripPrefix=1

            # NOVA rota: expõe os endpoints de diagnóstico via Gateway (/api/diagnostics/**)
            - id: diagnostics
              uri: lb://tasks-service
              predicates:
                - Path=/api/diagnostics/**
              filters:
                - StripPrefix=1

# Eureka client settings so the service registers at the discovery server
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://eureka:8761/eureka}
    instance:
    # Mantemos a preferência por IP (equivalente ao teu preferIpAddress:true)
    #prefer-ip-address: true
    # ID único por instância (útil quando arrancas 8081/8082 para veres LB)
      instance-id: ${spring.application.name}:${server.port:${random.value}}
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - gateway
  endpoint:
    gateway:
      access: read-only   # antigo "enabled" -> agora é "access" (read-only/read-write)

# (Opcional) API key didática (se definida por ENV, o gateway exige o header X-API-KEY)
app:
  security:
    api-key: ${API_KEY:}

logging:
  pattern:
    console: "%clr(%d{ISO8601}){faint} corrId=%X{corrId} %clr(%5p) %clr(${PID:- }){magenta} --- %clr(%-40.40logger{39}){cyan} : %m%n"
  level:
    root: INFO
    pt.taskflow: INFO

